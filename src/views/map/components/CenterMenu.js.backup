import React, { useState, useEffect } from 'react'
import { useSelector } from 'react-redux'
import { getThemeStyles } from 'map-import'
import { getZIndex } from '../utils/zIndexLayers'
import {
  MdApps,
  MdMap,
  MdLayers,
  MdPlace,
  MdNavigation,
  MdTerrain,
  MdSatellite,
  MdLocationCity,
  MdDirections,
  MdSearch,
  MdDashboard,
  MdPerson,
  MdLogout,
  MdSettings,
  MdGpsFixed,
  MdPhoto,
  MdFolder,
  MdBrightness6,
  MdSave,
  MdDownload,
  MdHistory,
  MdChevronRight,
  MdPowerSettingsNew,
} from 'react-icons/md'
import CenterMenuBar from './CenterMenuBar'
import MapSearchBar from './MapSearchBar'
import MapManagement from './MapManagement'

const CenterMenu = () => {
  const { mapTheme } = useSelector((state) => state.map)
  const themeStyles = getThemeStyles(mapTheme)
  const [hoveredButton, setHoveredButton] = useState(null)
  const [isMenuBarVisible, setIsMenuBarVisible] = useState(false)
  const [showSearchBar, setShowSearchBar] = useState(false)
  const [showMapManagement, setShowMapManagement] = useState(false)
  const [showProfileDropdown, setShowProfileDropdown] = useState(false)
  const [searchQuery, setSearchQuery] = useState('')

  // Bootstrap 5 grid responsive menu container
  const menuContainerStyle = {
    backgroundColor: themeStyles.baseButtonStyle.backgroundColor,
    borderRadius: '8px',
    boxShadow: '0 2px 10px rgba(0,0,0,0.15)',
    border: `1px solid ${themeStyles.baseButtonStyle.border.split(' ')[2]}`,
    zIndex: getZIndex('CENTER_MENU'),
  }

  // Windows 11 Start Menu style dropdown
  const profileDropdownStyle = {
    backgroundColor: themeStyles.baseButtonStyle.backgroundColor,
    borderRadius: '12px',
    boxShadow: '0 8px 32px rgba(0,0,0,0.15)',
    border: `1px solid ${themeStyles.baseButtonStyle.border.split(' ')[2]}`,
    zIndex: getZIndex('CENTER_MENU') + 10,
    width: '100%',
    minHeight: 'clamp(450px, 60vh, 600px)',
    animation: showProfileDropdown
      ? 'slideUpFadeIn 0.3s ease-out'
      : 'slideDownFadeOut 0.3s ease-in',
    backdropFilter: 'blur(20px)',
    WebkitBackdropFilter: 'blur(20px)',
  }

  const handleMenuClick = () => {
    setShowProfileDropdown(!showProfileDropdown)
    setIsMenuBarVisible(false)
  }

  const handleMenuBarClick = () => {
    setIsMenuBarVisible(!isMenuBarVisible)
    setShowProfileDropdown(false)
  }

  const handleManagementClick = () => {
    setShowMapManagement(!showMapManagement)
  }

  const handleLogout = () => {
    console.log('Logout clicked')
    setShowProfileDropdown(false)
  }

  // Pinned apps for the grid
  const pinnedApps = [
    { id: 'map-layers', icon: MdLayers, title: 'Katmanlar', color: '#0078d4' },
    { id: 'map-styles', icon: MdMap, title: 'Harita Stilleri', color: '#107C10' },
    { id: 'location', icon: MdGpsFixed, title: 'Konum', color: '#FF8C00' },
    { id: 'terrain', icon: MdTerrain, title: 'Arazi', color: '#8B4513' },
    { id: 'satellite', icon: MdSatellite, title: 'Uydu', color: '#2F4F4F' },
    { id: 'navigation', icon: MdNavigation, title: 'Navigasyon', color: '#4169E1' },
    { id: 'bookmarks', icon: MdPlace, title: 'Yer İşaretleri', color: '#DC143C' },
    { id: 'screenshots', icon: MdPhoto, title: 'Ekran Görüntüleri', color: '#9932CC' },
    { id: 'management', icon: MdDashboard, title: 'Yönetim', color: '#FF6347' },
    { id: 'settings', icon: MdSettings, title: 'Ayarlar', color: '#708090' },
    { id: 'themes', icon: MdBrightness6, title: 'Temalar', color: '#FFD700' },
    { id: 'search', icon: MdSearch, title: 'Arama', color: '#20B2AA' },
  ]

  // Recommended items
  const recommendedItems = [
    { id: 'recent-save', icon: MdSave, title: 'Son Kaydedilen Harita', subtitle: '2 saat önce', color: '#0078d4' },
    { id: 'export-data', icon: MdDownload, title: 'Veri Dışa Aktarımı', subtitle: '5 saat önce', color: '#107C10' },
    { id: 'map-history', icon: MdHistory, title: 'Harita Geçmişi', subtitle: 'Dün', color: '#FF8C00' },
    { id: 'shared-maps', icon: MdFolder, title: 'Paylaşılan Haritalar', subtitle: '3 gün önce', color: '#9932CC' },
  ]

  const buttons = [
    { id: 'menu', icon: MdApps, title: 'Uygulama Menüsü', onClick: handleMenuClick },
    { id: 'menubar', icon: MdDashboard, title: 'Araç Menüsü', onClick: handleMenuBarClick },
    { id: 'map', icon: MdMap, title: 'Harita Tipi', onClick: () => console.log('Harita Tipi') },
    { id: 'layers', icon: MdLayers, title: 'Katmanlar', onClick: () => console.log('Katmanlar') },
    {
      id: 'place',
      icon: MdPlace,
      title: 'Yer İşaretleri',
      onClick: () => console.log('Yer İşaretleri'),
    },
    {
      id: 'navigation',
      icon: MdNavigation,
      title: 'Navigasyon',
      onClick: () => console.log('Navigasyon'),
    },
    { id: 'terrain', icon: MdTerrain, title: 'Arazi', onClick: () => console.log('Arazi') },
    { id: 'satellite', icon: MdSatellite, title: 'Uydu', onClick: () => console.log('Uydu') },
    { id: 'search', icon: MdSearch, title: 'Arama', onClick: () => setShowSearchBar(true) },
  ]

  return (
    <>
      {/* Add keyframes for animations */}
      <style jsx>{`
        @keyframes slideUpFadeIn {
          from {
            opacity: 0;
            transform: translateY(20px) scale(0.95);
          }
          to {
            opacity: 1;
            transform: translateY(0) scale(1);
          }
        }
        
        @keyframes slideDownFadeOut {
          from {
            opacity: 1;
            transform: translateY(0) scale(1);
          }
          to {
            opacity: 0;
            transform: translateY(20px) scale(0.95);
          }
        }
      `}</style>

      <MapManagement 
        isVisible={showMapManagement} 
        onClose={() => setShowMapManagement(false)} 
      />
      <CenterMenuBar
        isVisible={isMenuBarVisible}
        onClose={() => setIsMenuBarVisible(false)}
        width="auto"
      />
      {showSearchBar && (
        <MapSearchBar
          width="auto"
          onClose={() => setShowSearchBar(false)}
          backgroundColor={themeStyles.baseButtonStyle.backgroundColor}
          borderRadius={menuContainerStyle.borderRadius}
        />
      )}

      {/* Center Menu Container Wrapper */}
      <div
        className="position-fixed bottom-0 start-50 translate-middle-x"
        style={{ zIndex: getZIndex('CENTER_MENU') }}
      >
        <div className="container-fluid">
          <div className="row justify-content-center">
            <div className="col-auto">
              <div className="d-flex flex-column align-items-center">
                
                {/* Windows 11 Style Start Menu Dropdown */}
                {showProfileDropdown && (
                  <div
                    className="mb-1 mb-sm-2 mb-md-3 mx-1 mx-sm-0"
                    style={profileDropdownStyle}
                  >
                    <div className="p-2 p-sm-3 p-md-4">
                      {/* Search Bar */}
                      <div className="mb-4">
                        <div className="position-relative">
                          <MdSearch 
                            className="position-absolute top-50 translate-middle-y ms-3"
                            style={{ 
                              fontSize: '16px', 
                              color: themeStyles.baseButtonStyle.color,
                              opacity: 0.6,
                              left: '4px'
                            }} 
                          />
                          <input
                            type="text"
                            placeholder="Arama yapın"
                            value={searchQuery}
                            onChange={(e) => setSearchQuery(e.target.value)}
                            className="form-control"
                            style={{
                              backgroundColor: `${themeStyles.baseButtonStyle.backgroundColor}`,
                              border: `1px solid ${themeStyles.baseButtonStyle.border.split(' ')[2]}`,
                              borderRadius: '8px',
                              paddingLeft: '40px',
                              fontSize: 'clamp(13px, 2vw, 14px)',
                              color: themeStyles.baseButtonStyle.color,
                              minHeight: '40px'
                            }}
                          />
                        </div>
                      </div>

                      {/* Pinned Section */}
                      <div className="mb-4">
                        <div className="d-flex align-items-center justify-content-between mb-3">
                          <h6 className="m-0" style={{ 
                            fontSize: 'clamp(13px, 2.5vw, 15px)', 
                            fontWeight: '600',
                            color: themeStyles.baseButtonStyle.color 
                          }}>
                            Sabitlenmiş
                          </h6>
                          <button 
                            className="btn btn-link p-0 d-flex align-items-center"
                            style={{ 
                              fontSize: 'clamp(12px, 2vw, 13px)', 
                              color: '#0078d4',
                              textDecoration: 'none'
                            }}
                          >
                            Tüm uygulamalar
                            <MdChevronRight className="ms-1" style={{ fontSize: '14px' }} />
                          </button>
                        </div>
                        
                        {/* Apps Grid - Mobile Responsive */}
                        <div className="row g-1 g-sm-2">
                          {pinnedApps.map((app) => (
                            <div key={app.id} className="col-6 col-sm-4 col-md-3 col-lg-2">
                              <button
                                className="btn w-100 d-flex flex-column align-items-center p-2"
                                style={{
                                  backgroundColor: 'transparent',
                                  border: 'none',
                                  borderRadius: '8px',
                                  transition: 'all 0.2s',
                                  minHeight: 'clamp(70px, 15vw, 90px)',
                                }}
                                onMouseEnter={(e) => {
                                  e.currentTarget.style.backgroundColor = themeStyles.buttonHoverStyle.backgroundColor || 'rgba(0, 120, 212, 0.1)'
                                }}
                                onMouseLeave={(e) => {
                                  e.currentTarget.style.backgroundColor = 'transparent'
                                }}
                                onClick={() => {
                                  console.log(`${app.title} clicked`)
                                  if (app.id === 'management') handleManagementClick()
                                  if (app.id === 'search') setShowSearchBar(true)
                                }}
                              >
                                <div
                                  className="rounded d-flex align-items-center justify-content-center mb-2"
                                  style={{
                                    width: 'clamp(32px, 7vw, 40px)',
                                    height: 'clamp(32px, 7vw, 40px)',
                                    backgroundColor: app.color,
                                  }}
                                >
                                  <app.icon 
                                    style={{ 
                                      fontSize: 'clamp(16px, 4vw, 20px)', 
                                      color: 'white' 
                                    }} 
                                  />
                                </div>
                                <span 
                                  style={{ 
                                    fontSize: 'clamp(10px, 1.8vw, 12px)', 
                                    color: themeStyles.baseButtonStyle.color,
                                    textAlign: 'center',
                                    lineHeight: '1.2'
                                  }}
                                >
                                  {app.title}
                                </span>
                              </button>
                            </div>
                          ))}
                        </div>
                      </div>

                      {/* Recommended Section */}
                      <div className="mb-3">
                        <div className="d-flex align-items-center justify-content-between mb-3">
                          <h6 className="m-0" style={{ 
                            fontSize: 'clamp(13px, 2.5vw, 15px)', 
                            fontWeight: '600',
                            color: themeStyles.baseButtonStyle.color 
                          }}>
                            Önerilen
                          </h6>
                          <button 
                            className="btn btn-link p-0 d-flex align-items-center"
                            style={{ 
                              fontSize: 'clamp(12px, 2vw, 13px)', 
                              color: '#0078d4',
                              textDecoration: 'none'
                            }}
                          >
                            Daha fazla
                            <MdChevronRight className="ms-1" style={{ fontSize: '14px' }} />
                          </button>
                        </div>
                        
                        {/* Recommended Items */}
                        <div className="d-flex flex-column gap-1">
                          {recommendedItems.map((item) => (
                            <button
                              key={item.id}
                              className="btn d-flex align-items-center text-start p-2"
                              style={{
                                backgroundColor: 'transparent',
                                border: 'none',
                                borderRadius: '6px',
                                transition: 'all 0.2s'
                              }}
                              onMouseEnter={(e) => {
                                e.currentTarget.style.backgroundColor = themeStyles.buttonHoverStyle.backgroundColor || 'rgba(0, 120, 212, 0.1)'
                              }}
                              onMouseLeave={(e) => {
                                e.currentTarget.style.backgroundColor = 'transparent'
                              }}
                            >
                              <div
                                className="rounded me-3 d-flex align-items-center justify-content-center"
                                style={{
                                  width: 'clamp(24px, 5vw, 28px)',
                                  height: 'clamp(24px, 5vw, 28px)',
                                  backgroundColor: item.color,
                                }}
                              >
                                <item.icon 
                                  style={{ 
                                    fontSize: 'clamp(12px, 3vw, 14px)', 
                                    color: 'white' 
                                  }} 
                                />
                              </div>
                              <div className="flex-grow-1">
                                <div 
                                  style={{ 
                                    fontSize: 'clamp(12px, 2vw, 13px)', 
                                    color: themeStyles.baseButtonStyle.color,
                                    fontWeight: '500'
                                  }}
                                >
                                  {item.title}
                                </div>
                                <div 
                                  style={{ 
                                    fontSize: 'clamp(10px, 1.8vw, 11px)', 
                                    color: themeStyles.baseButtonStyle.color,
                                    opacity: 0.7
                                  }}
                                >
                                  {item.subtitle}
                                </div>
                              </div>
                            </button>
                          ))}
                        </div>
                      </div>

                      {/* User Profile Section */}
                      <div className="border-top pt-3" style={{ 
                        borderColor: `${themeStyles.baseButtonStyle.border.split(' ')[2]} !important`,
                        opacity: 0.3
                      }}>
                        <div className="d-flex align-items-center justify-content-between">
                          <div className="d-flex align-items-center gap-2">
                            <div
                              className="rounded-circle d-flex align-items-center justify-content-center"
                              style={{
                                width: 'clamp(28px, 6vw, 32px)',
                                height: 'clamp(28px, 6vw, 32px)',
                                backgroundColor: '#0078d4',
                                border: '2px solid rgba(0, 120, 212, 0.2)'
                              }}
                            >
                              <MdPerson 
                                style={{ 
                                  fontSize: 'clamp(14px, 3.5vw, 16px)', 
                                  color: 'white' 
                                }} 
                              />
                            </div>
                            <span 
                              style={{ 
                                fontSize: 'clamp(12px, 2vw, 13px)', 
                                color: themeStyles.baseButtonStyle.color,
                                fontWeight: '500'
                              }}
                            >
                              Ahmet Kurtulmuş
                            </span>
                          </div>
                          
                          <button
                            className="btn btn-link p-0"
                            onClick={handleLogout}
                            style={{
                              color: '#dc3545',
                              textDecoration: 'none'
                            }}
                            title="Çıkış Yap"
                          >
                            <MdPowerSettingsNew style={{ fontSize: 'clamp(16px, 3.5vw, 18px)' }} />
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                )}

                {/* Windows 11 Responsive Taskbar */}
                <div
                  className="mb-1 mb-sm-2 mb-md-3 mx-1 mx-sm-0"
                style={{
                    backgroundColor: 'rgba(255, 255, 255, 0.85)',
                    borderRadius: '8px',
                    boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
                    border: '1px solid rgba(255, 255, 255, 0.2)',
                    padding: 'clamp(3px, 0.8vw, 6px)',
                    backdropFilter: 'blur(30px)',
                    WebkitBackdropFilter: 'blur(30px)',
                  WebkitUserSelect: 'none',
                  WebkitTouchCallout: 'none',
                    WebkitTapHighlightColor: 'transparent',
                    zIndex: getZIndex('CENTER_MENU'),
                    minHeight: 'clamp(44px, 10vw, 56px)',
                    maxWidth: '100vw',
                    overflow: 'hidden'
                  }}
                >
                  <div className="d-flex align-items-center justify-content-between">
                    {/* Left Group - Essential Controls */}
                    <div className="d-flex align-items-center" style={{ gap: 'clamp(2px, 0.5vw, 4px)' }}>
                      {/* Start Button */}
                      <button
                        className="btn d-flex align-items-center justify-content-center"
                        style={{
                          borderRadius: '6px',
                          cursor: 'pointer',
                          transition: 'all 0.15s',
                          margin: 0,
                          backgroundColor: showProfileDropdown 
                            ? 'rgba(0, 120, 212, 0.1)' 
                            : hoveredButton === 'menu'
                            ? 'rgba(0, 0, 0, 0.05)'
                            : 'transparent',
                          border: 'none',
                          boxShadow: 'none',
                          padding: 'clamp(6px, 1.5vw, 8px)',
                          minWidth: 'clamp(36px, 8vw, 44px)',
                          minHeight: 'clamp(36px, 8vw, 44px)',
                          WebkitTapHighlightColor: 'transparent'
                        }}
                        onClick={handleMenuClick}
                        onMouseEnter={() => setHoveredButton('menu')}
                        onMouseLeave={() => setHoveredButton(null)}
                        title="Başlat"
                      >
                        <div className="d-grid" style={{ 
                          gridTemplateColumns: '1fr 1fr', 
                          gap: '1px',
                          width: 'clamp(12px, 3vw, 16px)',
                          height: 'clamp(12px, 3vw, 16px)'
                        }}>
                          <div style={{ backgroundColor: '#0078d4', borderRadius: '1px' }}></div>
                          <div style={{ backgroundColor: '#0078d4', borderRadius: '1px' }}></div>
                          <div style={{ backgroundColor: '#0078d4', borderRadius: '1px' }}></div>
                          <div style={{ backgroundColor: '#0078d4', borderRadius: '1px' }}></div>
                        </div>
                      </button>

                      {/* Search Box - Responsive */}
                      <div
                        className="position-relative d-none d-sm-block"
                        style={{
                          minWidth: 'clamp(100px, 20vw, 160px)',
                          maxWidth: 'clamp(140px, 30vw, 220px)'
                        }}
                      >
                        <button
                          className="btn w-100 d-flex align-items-center text-start"
                          style={{
                            backgroundColor: hoveredButton === 'searchbox' 
                              ? 'rgba(255, 255, 255, 0.9)' 
                              : 'rgba(255, 255, 255, 0.7)',
                            border: '1px solid rgba(0, 0, 0, 0.1)',
                            borderRadius: '20px',
                            padding: 'clamp(4px, 1vw, 6px) clamp(8px, 2vw, 12px)',
                            minHeight: 'clamp(28px, 6vw, 36px)',
                            transition: 'all 0.15s',
                            fontSize: 'clamp(10px, 2vw, 13px)',
                            color: '#666',
                            boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.1)'
                          }}
                          onClick={() => setShowSearchBar(true)}
                          onMouseEnter={() => setHoveredButton('searchbox')}
                          onMouseLeave={() => setHoveredButton(null)}
                          title="Arama yapın"
                        >
                          <MdSearch 
                            className="me-1" 
                            style={{ 
                              fontSize: 'clamp(12px, 2.5vw, 14px)',
                              color: '#666',
                              flexShrink: 0
                            }} 
                          />
                          <span 
                            className="d-none d-md-inline"
                            style={{ 
                              overflow: 'hidden',
                              textOverflow: 'ellipsis',
                              whiteSpace: 'nowrap'
                            }}
                          >
                            Arama
                          </span>
                        </button>
                      </div>

                      {/* Mobile Search Icon */}
                      <button
                        className="btn d-flex align-items-center justify-content-center d-sm-none"
                        style={{
                          borderRadius: '6px',
                          cursor: 'pointer',
                          transition: 'all 0.15s',
                          margin: 0,
                          backgroundColor: hoveredButton === 'search'
                            ? 'rgba(0, 0, 0, 0.05)'
                            : 'transparent',
                          border: 'none',
                          boxShadow: 'none',
                          padding: 'clamp(6px, 1.5vw, 8px)',
                          minWidth: 'clamp(36px, 8vw, 44px)',
                          minHeight: 'clamp(36px, 8vw, 44px)',
                          WebkitTapHighlightColor: 'transparent'
                        }}
                        onClick={() => setShowSearchBar(true)}
                        onMouseEnter={() => setHoveredButton('search')}
                        onMouseLeave={() => setHoveredButton(null)}
                        title="Arama"
                      >
                        <MdSearch style={{
                          fontSize: 'clamp(14px, 3.5vw, 18px)',
                          color: '#444'
                        }} />
                      </button>

                      {/* Task View */}
                      <button
                        className="btn d-flex align-items-center justify-content-center"
                        style={{
                          borderRadius: '6px',
                          cursor: 'pointer',
                          transition: 'all 0.15s',
                          margin: 0,
                          backgroundColor: hoveredButton === 'taskview'
                            ? 'rgba(0, 0, 0, 0.05)'
                            : 'transparent',
                          border: 'none',
                          boxShadow: 'none',
                          padding: 'clamp(6px, 1.5vw, 8px)',
                          minWidth: 'clamp(36px, 8vw, 44px)',
                          minHeight: 'clamp(36px, 8vw, 44px)',
                  WebkitTapHighlightColor: 'transparent'
                }}
                        onClick={handleMenuBarClick}
                        onMouseEnter={() => setHoveredButton('taskview')}
                        onMouseLeave={() => setHoveredButton(null)}
                        title="Görev görünümü"
                      >
                        <div className="d-flex flex-column" style={{ gap: '1px' }}>
                          <div className="d-flex" style={{ gap: '1px' }}>
                            <div style={{
                              width: 'clamp(4px, 1vw, 6px)',
                              height: 'clamp(3px, 0.8vw, 4px)',
                              backgroundColor: '#444',
                              borderRadius: '0.5px'
                            }}></div>
                            <div style={{
                              width: 'clamp(4px, 1vw, 6px)',
                              height: 'clamp(3px, 0.8vw, 4px)',
                              backgroundColor: '#444',
                              borderRadius: '0.5px'
                            }}></div>
                          </div>
                          <div className="d-flex" style={{ gap: '1px' }}>
                            <div style={{
                              width: 'clamp(4px, 1vw, 6px)',
                              height: 'clamp(3px, 0.8vw, 4px)',
                              backgroundColor: isMenuBarVisible ? '#0078d4' : '#444',
                              borderRadius: '0.5px'
                            }}></div>
                            <div style={{
                              width: 'clamp(4px, 1vw, 6px)',
                              height: 'clamp(3px, 0.8vw, 4px)',
                              backgroundColor: '#444',
                              borderRadius: '0.5px'
                            }}></div>
                          </div>
                        </div>
                      </button>
                    </div>

                    {/* Center Group - App Icons (Hidden on small mobile) */}
                    <div 
                      className="d-none d-md-flex align-items-center" 
                      style={{ gap: '2px' }}
                    >
                      {buttons.slice(2, 6).map((button) => (
                  <button
                    key={button.id}
                          className="btn d-flex align-items-center justify-content-center position-relative"
                    style={{
                            borderRadius: '6px',
                      cursor: 'pointer',
                            transition: 'all 0.15s',
                      margin: 0,
                            backgroundColor: hoveredButton === button.id
                              ? 'rgba(0, 0, 0, 0.05)'
                              : 'transparent',
                            border: 'none',
                      boxShadow: 'none',
                            padding: 'clamp(6px, 1.5vw, 8px)',
                            minWidth: 'clamp(36px, 8vw, 44px)',
                            minHeight: 'clamp(36px, 8vw, 44px)',
                            WebkitTapHighlightColor: 'transparent'
                    }}
                    onClick={button.onClick}
                    onMouseEnter={() => setHoveredButton(button.id)}
                    onMouseLeave={() => setHoveredButton(null)}
                    title={button.title}
                  >
                    <button.icon
                            style={{
                              fontSize: 'clamp(14px, 3.5vw, 18px)',
                              color: '#444',
                              opacity: 0.9
                            }}
                          />
                          
                          {/* Running indicator dot */}
                          <div
                            className="position-absolute bottom-0 start-50 translate-middle-x"
                      style={{
                              width: '3px',
                              height: '3px',
                              backgroundColor: '#0078d4',
                              borderRadius: '50%',
                              marginBottom: '-1px',
                              opacity: Math.random() > 0.7 ? 1 : 0
                      }}
                    />
                  </button>
                ))}
                    </div>

                    {/* Right Group - System Tray */}
                    <div className="d-flex align-items-center" style={{ gap: '1px' }}>
                      {/* Widgets - Hidden on mobile */}
                      <button
                        className="btn d-flex align-items-center justify-content-center d-none d-lg-flex"
                        style={{
                          borderRadius: '6px',
                          cursor: 'pointer',
                          transition: 'all 0.15s',
                          margin: 0,
                          backgroundColor: hoveredButton === 'widgets'
                            ? 'rgba(0, 0, 0, 0.05)'
                            : 'transparent',
                          border: 'none',
                          boxShadow: 'none',
                          padding: 'clamp(4px, 1vw, 6px)',
                          minWidth: 'clamp(28px, 6vw, 36px)',
                          minHeight: 'clamp(28px, 6vw, 36px)',
                          WebkitTapHighlightColor: 'transparent'
                        }}
                        onMouseEnter={() => setHoveredButton('widgets')}
                        onMouseLeave={() => setHoveredButton(null)}
                        title="Widgets"
                      >
                        <div style={{
                          fontSize: 'clamp(10px, 2.5vw, 12px)',
                          color: '#444',
                          fontWeight: 'bold'
                        }}>
                          22°
                        </div>
                      </button>

                      {/* System Icons - Simplified on mobile */}
                      <button
                        className="btn d-flex align-items-center justify-content-center d-none d-sm-flex"
                        style={{
                          borderRadius: '6px',
                          cursor: 'pointer',
                          transition: 'all 0.15s',
                          margin: 0,
                          backgroundColor: hoveredButton === 'notifications'
                            ? 'rgba(0, 0, 0, 0.05)'
                            : 'transparent',
                          border: 'none',
                          boxShadow: 'none',
                          padding: 'clamp(4px, 1vw, 6px)',
                          minWidth: 'clamp(28px, 6vw, 36px)',
                          minHeight: 'clamp(28px, 6vw, 36px)',
                          WebkitTapHighlightColor: 'transparent'
                        }}
                        onMouseEnter={() => setHoveredButton('notifications')}
                        onMouseLeave={() => setHoveredButton(null)}
                        title="Bildirimler"
                      >
                        <div className="d-flex align-items-center" style={{ gap: '1px' }}>
                          <div style={{
                            width: '2px',
                            height: 'clamp(6px, 1.5vw, 8px)',
                            backgroundColor: '#666',
                            borderRadius: '1px'
                          }}></div>
                          <div style={{
                            width: '2px',
                            height: 'clamp(8px, 2vw, 10px)',
                            backgroundColor: '#666',
                            borderRadius: '1px'
                          }}></div>
                          <div style={{
                            width: '2px',
                            height: 'clamp(5px, 1.2vw, 7px)',
                            backgroundColor: '#666',
                            borderRadius: '1px'
                          }}></div>
                        </div>
                      </button>

                      {/* Date/Time - Compact on mobile */}
                      <button
                        className="btn d-flex flex-column align-items-center justify-content-center text-center"
                        style={{
                          borderRadius: '6px',
                          cursor: 'pointer',
                          transition: 'all 0.15s',
                          margin: 0,
                          backgroundColor: hoveredButton === 'datetime'
                            ? 'rgba(0, 0, 0, 0.05)'
                            : 'transparent',
                          border: 'none',
                          boxShadow: 'none',
                          padding: 'clamp(3px, 0.8vw, 5px)',
                          minWidth: 'clamp(32px, 7vw, 44px)',
                          minHeight: 'clamp(28px, 6vw, 36px)',
                          WebkitTapHighlightColor: 'transparent'
                        }}
                        onMouseEnter={() => setHoveredButton('datetime')}
                        onMouseLeave={() => setHoveredButton(null)}
                        title="Tarih ve saat"
                      >
                        <div style={{
                          fontSize: 'clamp(8px, 1.8vw, 10px)',
                          color: '#444',
                          fontWeight: '600',
                          lineHeight: 1
                        }}>
                          11:11
                        </div>
                        <div 
                          className="d-none d-sm-block"
                          style={{
                            fontSize: 'clamp(6px, 1.3vw, 8px)',
                            color: '#666',
                            lineHeight: 1
                          }}
                        >
                          10/20
                        </div>
                      </button>

                      {/* Show Desktop - Thinner on mobile */}
                      <button
                        className="btn"
                        style={{
                          borderRadius: '0 6px 6px 0',
                          cursor: 'pointer',
                          transition: 'all 0.15s',
                          margin: 0,
                          backgroundColor: hoveredButton === 'desktop'
                            ? 'rgba(0, 0, 0, 0.05)'
                            : 'transparent',
                          border: 'none',
                          borderLeft: '1px solid rgba(0,0,0,0.1)',
                          boxShadow: 'none',
                          padding: 0,
                          width: 'clamp(4px, 1vw, 6px)',
                          minHeight: 'clamp(28px, 6vw, 36px)',
                          WebkitTapHighlightColor: 'transparent'
                        }}
                        onMouseEnter={() => setHoveredButton('desktop')}
                        onMouseLeave={() => setHoveredButton(null)}
                        title="Masaüstünü göster"
                      >
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  )
}

export default CenterMenu 